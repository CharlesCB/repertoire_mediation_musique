# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-07 19:40
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bdmultimedia', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ElemMus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': '\xc9l\xe9ments musicaux',
            },
        ),
        migrations.CreateModel(
            name='Outil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(blank=True, max_length=200, verbose_name="Titre de l'outil")),
                ('url', models.URLField(blank=True, verbose_name="Chemin d'acc\xe8s direct (c\xe0d quand on a fini de parcourir le site)")),
                ('site', models.URLField(blank=True, verbose_name="Chemin d'acc\xe8s au site d'h\xe9bergement")),
                ('producteur_type', models.CharField(blank=True, choices=[('Particulier', 'Particulier'), ('Organisme de diffusion (OSM, Festival)', 'Organisme de diffusion (OSM, Festival)'), ('Organisme de formation professionnelle (CQM, ARIAM, CFMI)', 'Organisme de formation professionnelle (CQM, ARIAM, CFMI)'), ('Groupe de recherche (P2M, Groupe de recherche sur la m\xe9diation culturelle)', 'Groupe de recherche (P2M, Groupe de recherche sur la m\xe9diation culturelle)'), ('Organismes \xe9ducatif (Ecole de musique, TEDX)', 'Organismes \xe9ducatif (Ecole de musique, TEDX)'), ('Autre', 'Autre')], max_length=200, verbose_name='Producteurs')),
                ('producteur_nom', models.CharField(blank=True, max_length=200, verbose_name='Pr\xe9ciser le nom complet du producteur')),
                ('support_diffusion', models.CharField(blank=True, choices=[('Ordinateur', 'Ordinateur'), ('Smartphone', 'Smartphone'), ('Tablette', 'Tablette'), ('Lunettes 3D', 'Lunettes 3D'), ('Consoles de JV', 'Consoles de JV'), ('DVD', 'DVD'), ('CD', 'CD'), ('Autre', 'Autre')], max_length=200, verbose_name='Support de diffusion')),
                ('format', models.CharField(blank=True, choices=[('Ecrit (texte, dessin)', 'Ecrit (texte, dessin)'), ('Audio', 'Audio'), ('Audiovisuel', 'Audiovisuel'), ('Immersif', 'Immersif'), ('R\xe9alit\xe9 augment\xe9e', 'R\xe9alit\xe9 augment\xe9e'), ('Autre', 'Autre')], max_length=200, verbose_name="Format de l'outil")),
                ('forme_narrative', models.CharField(blank=True, choices=[('Entrevue', 'Entrevue'), ('Fiction', 'Fiction'), ("Synopsis (r\xe9cit fid\xe8le au programme de l'oeuvre)", "Synopsis (r\xe9cit fid\xe8le au programme de l'oeuvre)"), ('Web-s\xe9rie (plusieurs occurences qui ont un lien entre elles)', 'Web-s\xe9rie (plusieurs occurences qui ont un lien entre elles)'), ('Animation', 'Animation'), ('Art et essai', 'Art et essai'), ('Vulgarisation', 'Vulgarisation'), ('Creative commons (sur le mod\xe8le wiki)', 'Creative commons (sur le mod\xe8le wiki)'), ('Reportage', 'Reportage'), ('Jeu', 'Jeu'), ('Autre', 'Autre')], max_length=200, verbose_name='Forme narrative g\xe9n\xe9rale')),
                ('duree', models.TimeField(verbose_name='Dur\xe9e')),
                ('nb_pages', models.PositiveIntegerField(verbose_name='Nombre de pages')),
                ('mise_en_ligne_date', models.DateField(verbose_name='Date de la mise en ligne')),
                ('depouillement_date', models.DateField(verbose_name='Date du d\xe9pouillement')),
                ('interface_type', models.CharField(blank=True, choices=[('Collaborative', 'Collaborative'), ('Interactive', 'Interactive'), ('Neutre', 'Neutre')], max_length=200, verbose_name="Type d'interface")),
                ('commentaire_possible', models.BooleanField(verbose_name='Possibilit\xe9 de laisser des commentaires')),
                ('commentaire_nombre', models.PositiveIntegerField(verbose_name='Nombre de commentaires')),
                ('mode_hebergement', models.CharField(blank=True, choices=[('Youtube / Vimeo, etc..', 'Youtube / Vimeo, etc..'), ('Portail institutionnel', 'Portail institutionnel'), ('R\xe9seau social', 'R\xe9seau social'), ('Cloud', 'Cloud'), ('Autre', 'Autre')], max_length=200, verbose_name="Mode d'h\xe9bergement sur la toile")),
                ('narration_langue', models.CharField(blank=True, choices=[('Fran\xe7ais', 'Fran\xe7ais'), ('Anglais', 'Anglais'), ('Allemand', 'Allemand'), ('Portugais', 'Portugais'), ('Autre', 'Autre')], max_length=200, verbose_name='Langue de la narration')),
                ('sous_titre', models.CharField(blank=True, choices=[('Pas de sous titrage', 'Pas de sous titrage'), ('Fran\xe7ais', 'Fran\xe7ais'), ('Anglais', 'Anglais'), ('Allemand', 'Allemand'), ('Portugais', 'Portugais'), ('Autre', 'Autre')], max_length=200, verbose_name='Sous-titrage')),
                ('malentendants', models.CharField(blank=True, choices=[('Oui', 'Oui'), ('Non', 'Non'), ("Ne s'applique pas", "Ne s'applique pas")], max_length=200, verbose_name='Sous titrage malentendants')),
                ('audiodescription', models.CharField(blank=True, choices=[('Oui', 'Oui'), ('Non', 'Non'), ("Ne s'applique pas", "Ne s'applique pas")], max_length=200, verbose_name='Audiodescription (mal voyants)')),
                ('language_des_signes', models.CharField(blank=True, choices=[('Oui', 'Oui'), ('Non', 'Non'), ("Ne s'applique pas", "Ne s'applique pas")], max_length=200, verbose_name='Language des signes')),
                ('materiau_musical', models.CharField(blank=True, choices=[('Non', 'Non'), ('Son', 'Son'), ('Structure', 'Structure'), ('Language musical', 'Language musical'), ('Genre (op\xe9ra, symphonique)', 'Genre (op\xe9ra, symphonique)'), ('Style (Classique, Romantique, Contemporain)', 'Style (Classique, Romantique, Contemporain)'), ('Autre', 'Autre')], max_length=200, verbose_name='Mat\xe9riau musical')),
                ('elements_musicaux', models.ManyToManyField(to='bdmultimedia.ElemMus')),
            ],
        ),
        migrations.DeleteModel(
            name='Site',
        ),
        migrations.DeleteModel(
            name='Titre',
        ),
        migrations.DeleteModel(
            name='URL',
        ),
    ]
